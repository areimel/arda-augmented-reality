---
//Project Notes:
//This is a general template for creating an AR experience that uses a marker image to trigger a video, image, or 3D object.

/* =============================================== */

//Components
import ARLayout from '@layouts/AR-Layout.astro';
import CustomUI from '@components/ARComponents/CustomUI.astro';
import ExtraUI from '@components/ARComponents/ExtraUI.astro';
import HoloBusinessCard from '@components/ARComponents/HoloBusinessCard/index.astro';

//Project Data
const projectData = await import("src/data/projectData/interactive-marker-template.json");

/*===== Main Settings =====*/
	let defaultRotation = projectData.modelSettings.defaultRotationSetting; // "flat" or "wall"
	//const defaultScale = projectData.modelSettings.defaultScale;
	const markerFile = projectData.markerFile;
	//const markerImage = projectData.markerImage;
	const experienceType = projectData.experienceType;
	const assetFile = projectData.assetFile;
	const assetHeight = projectData.assetHeight;
	const assetWidth = projectData.assetWidth;
	const assetScale = projectData.assetScale;
	const infoLink = projectData.projectBaseUrl + "/project-info";
	

/*===== Position Configurations =====*/
	let rotationSetting = "";
	let positionSetting = "";
	//Wall surface configuration - 
	let WallRotationSetting = projectData.modelSettings.wallRotationSetting;	//don't change
	let WallpositionSetting = projectData.modelSettings.wallPositionSetting;	//change as needed

	//Flat surface configuration
	let FlatRotationSetting = projectData.modelSettings.flatRotationSetting;	//don't change
	let FlatpositionSetting = projectData.modelSettings.flatPositionSetting;	//probably don't change

	//Card surface configuration
	let CardRotationSetting = projectData.modelSettings.cardRotationSetting;	//don't change
	let CardpositionSetting = projectData.modelSettings.cardPositionSetting;	//change as needed

/*===== Start-Up Settings - Processing =====*/
	if(defaultRotation == "flat"){
		rotationSetting = projectData.modelSettings.flatRotationSetting;
		positionSetting = projectData.modelSettings.flatPositionSetting;
	}else{
		rotationSetting = projectData.modelSettings.wallRotationSetting;
		positionSetting = projectData.modelSettings.wallPositionSetting;
	}

---

<ARLayout 
	title={projectData.projectName}
>
	<!-- Interaction Events Script -->
	<script is:inline>
		document.addEventListener("DOMContentLoaded", function(e){
			//Define marker & asset elements
			const markerTarget = document.querySelector('#mind-ar-target');
			
			//const videoMedia = document.querySelector('#displayVideo');

			markerTarget.addEventListener("targetFound", event => {
				console.log("target found");
				//videoMedia.play();
			});
			// detect target lost
			markerTarget.addEventListener("targetLost", event => {
				console.log("target lost");
				//videoMedia.pause();
			});

			//detect click on buttons
			const profileButton = document.querySelector('#profile-button');
			const webButton = document.querySelector('#web-button');
			const emailButton = document.querySelector('#email-button');
			const locationButton = document.querySelector('#location-button');

			profileButton.addEventListener('click', event => {
				console.log('profile button clicked');
				window.open('https://alecreimel.com', '_blank');
			});

			webButton.addEventListener('click', event => {
				console.log('web button clicked');
				window.open('https://planet-caravan-studios.netlify.app/', '_blank');
			});

			emailButton.addEventListener('click', event => {
				console.log('profile button clicked');
				window.open('https://alecreimel.com', '_blank');
			});

			locationButton.addEventListener('click', event => {
				console.log('web button clicked');
				window.open('https://planet-caravan-studios.netlify.app/', '_blank');
			});
		});
	</script>

	<style>
		.clickable {
			cursor: pointer;
		}
	</style>

	<!-- Normal 'Page' Layer Elements -->
	<ExtraUI infoLink={infoLink}/>
	<CustomUI/>

	<!-- Augmented Reality Layer -->
	<a-scene 
		mindar-image={`imageTargetSrc: ${markerFile}; uiScanning: #custom-scanning-overlay;`}
		color-space="sRGB" 
		renderer="colorManagement: true, physicallyCorrectLights" 
		vr-mode-ui="false" 
		xr-mode-ui="enabled: false"
		device-orientation-permission-ui="enabled: false"
		real-world-meshing
	>
		<!-- VR Scene Assets-->
		<a-assets>
			<img id="card" src="/images/splash-background-1.jpg" />
			<img id="icon-web" src="/images/ui-icons/mdi--web.png" />
			<img id="icon-location" src="/images/ui-icons/mdi--map.png" />
			<img id="icon-profile" src="/images/ui-icons/gg--profile.png" />
			<img id="icon-phone" src="/images/ui-icons/mdi--phone.png" />
			<img id="icon-email" src="/images/ui-icons/mdi--email.png" />
			<img id="icon-play" src="/images/ui-icons/mdi--play.png" />
			<img id="icon-left" src="/images/ui-icons/mdi--arrow-left-bold.png" />
			<img id="icon-right" src="./images/ui-icons/mdi--arrow-right-bold.png" />
			
			<!-- <img id="paintandquest-preview" src="./assets/card-example/portfolio/paintandquest-preview.png" />
			<video id="paintandquest-video-mp4" autoplay="false" loop="true" src="./assets/card-example/portfolio/paintandquest.mp4"></video>
			<video id="paintandquest-video-webm" autoplay="false" loop="true" src="./assets/card-example/portfolio/paintandquest.webm"></video>
			<img id="coffeemachine-preview" src="./assets/card-example/portfolio/coffeemachine-preview.png" />
			<img id="peak-preview" src="./assets/card-example/portfolio/peak-preview.png" /> -->
			
			<!-- <a-asset-item id="avatarModel" src="https://cdn.jsdelivr.net/gh/hiukim/mind-ar-js@1.2.2/examples/image-tracking/assets/card-example/softmind/scene.gltf"></a-asset-item> -->
		</a-assets>


		<a-camera 
			position="0 0 0" 
			id="camera"
			look-controls="enabled: false"
			raycaster="far: 10000; objects: .clickable"
			cursor="fuse: false; rayOrigin: mouse;"
		></a-camera>

		<a-entity 
			id="mind-ar-target"
			mindar-image-target="targetIndex: 0"
		>
			<a-entity
				id="objectWrapper"
				rotation={rotationSetting ? rotationSetting : "90 0 0"}
				position={positionSetting ? positionSetting : "0 0 0.01"}
				scale={assetScale ? `${assetScale} ${assetScale} ${assetScale}` : "1 1 1"}
				data-rotation-setting="flat"
				data-wall-position={WallpositionSetting}
				data-wall-rotation={WallRotationSetting}
				data-flat-position={FlatpositionSetting}
				data-flat-rotation={FlatRotationSetting}
				data-card-position={CardpositionSetting}
				data-card-rotation={CardRotationSetting}
			>
				<a-entity id="objectActual">
					<HoloBusinessCard/>
					

				</a-entity>
				
			</a-entity>
		</a-entity>

	</a-scene>

</ARLayout>




